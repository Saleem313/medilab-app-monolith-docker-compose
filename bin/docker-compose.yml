version: '3.8'
services:
  #app service name
  medilab-boot-monolith-app-service:
    container_name: medilab-monolith-boot-app-cntnr
    image: medilab-monolith-boot-app-img 
    restart: on-failure
    ports:
      - 5006:8087
    environment:
      - MEDILAB_BOOT_APP_DB_DRIVER=com.mysql.jdbc.Driver
      - MEDILAB_BOOT_APP_DB_USERNAME=root
      - MEDILAB_BOOT_APP_DB_PASSWORD=root
      - MEDILAB_BOOT_APP_DB_TYPE=mysql
      - MEDILAB_BOOT_APP_DB_CONTAINER_NAME=medilab-boot-monolith-db-app-service
      - MEDILAB_BOOT_APP_DB_PORT=3306
      - MEDILAB_BOOT_APP_DB=medilab-monolith-preclinic
      - MEDILAB_BOOT_APP_DB_DIALECT=org.hibernate.dialect.MySQL5InnoDBDialect

  #app Db service name
  medilab-boot-monolith-db-app-service:
    #container_name: medilab-boot-monolith-db
    container_name: medilab-boot-monolith-db
    image: mysql:5.7.36
    ports:
      - 3306:3306
    volumes:
      #- /opt/docker_files/medilab_monolith_app/mysql_volume:/var/lib/mysql
      #creating name volume
      -  mysql_volume:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
     # - MYSQL_DATABASE=medilab-monolith-preclinic
      - MYSQL_DATABASE=medilab_monolith_db
volumes:
  mysql_volume:
    #using extenal volume no need to create volume using docker-compose file
    external: true

